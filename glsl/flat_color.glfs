#version 330 core

//***** begin interface of view.glsl ***********************************
mat4 get_modelview_matrix();
mat4 get_projection_matrix();
mat4 get_modelview_projection_matrix();
mat4 get_inverse_modelview_matrix();
mat4 get_inverse_modelview_projection_matrix();
mat3 get_normal_matrix();
mat3 get_inverse_normal_matrix();
//***** end interface of view.glsl ***********************************

in vec3 position_fs;
in vec3 normal_fs;
in vec2 uv_fs;

layout (location = 0) out vec3 gPosition;
layout (location = 1) out vec3 gNormal;
layout (location = 2) out vec3 gAlbedo;
layout (location = 3) out float gIsCloud;

uniform vec3 flat_color;
uniform sampler2D texture_sampler;
uniform bool has_texture;

void main() {
    gPosition = position_fs;
    gNormal = normalize(get_normal_matrix() * normal_fs);
    if (has_texture) {
        gAlbedo = texture(texture_sampler, uv_fs).rgb;
    } else {
        gAlbedo = flat_color;
    }
    gIsCloud = 0.0F;
}
